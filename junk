import React, { useState } from "react";

const DynamicInputBoxes = () => {
  const [inputFields, setInputFields] = useState([""]);

  // Function to add an input box below the current one
  const addInputFieldBelow = (index) => {
    const fields = [...inputFields];
    fields.splice(index + 1, 0, ""); // Insert a new empty string below the current index
    setInputFields(fields);
  };

  // Function to add an input box above the current one
  const addInputFieldAbove = (index) => {
    const fields = [...inputFields];
    fields.splice(index, 0, ""); // Insert a new empty string above the current index
    setInputFields(fields);
  };

  // Function to remove an input box
  const removeInputField = (index) => {
    const fields = [...inputFields];
    fields.splice(index, 1); // Remove the input box at the specified index
    setInputFields(fields);
  };

  // Function to handle changes in the input box value
  const handleInputChange = (index, event) => {
    const fields = [...inputFields];
    fields[index] = event.target.value; // Update the input value at the specified index
    setInputFields(fields);
  };

  return (
    <div>
      {inputFields.map((input, index) => (
        <div key={index} style={{ marginBottom: "10px" }}>
          <input
            type="text"
            value={input}
            onChange={(event) => handleInputChange(index, event)}
            placeholder={`Input box ${index + 1}`}
          />
          <button onClick={() => addInputFieldAbove(index)} style={{ marginLeft: "10px" }}>
            Add Above
          </button>
          <button onClick={() => addInputFieldBelow(index)} style={{ marginLeft: "5px" }}>
            Add Below
          </button>
          <button
            onClick={() => removeInputField(index)}
            style={{ marginLeft: "5px" }}
            disabled={inputFields.length === 1} // Disable remove button if there's only one input box
          >
            Remove
          </button>
        </div>
      ))}
    </div>
  );
};

export default DynamicInputBoxes;
